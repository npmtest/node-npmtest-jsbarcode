{"/home/travis/build/npmtest/node-npmtest-jsbarcode/test.js":"/* istanbul instrument in package npmtest_jsbarcode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/lib.npmtest_jsbarcode.js":"/* istanbul instrument in package npmtest_jsbarcode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_jsbarcode = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_jsbarcode = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-jsbarcode && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_jsbarcode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_jsbarcode\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_jsbarcode.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_jsbarcode.rollup.js'] =\n            local.assetsDict['/assets.npmtest_jsbarcode.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_jsbarcode.__dirname + '/lib.npmtest_jsbarcode.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/JsBarcode.js":"'use strict';\n\nvar _barcodes = require('./barcodes/');\n\nvar _barcodes2 = _interopRequireDefault(_barcodes);\n\nvar _merge = require('./help/merge.js');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _linearizeEncodings = require('./help/linearizeEncodings.js');\n\nvar _linearizeEncodings2 = _interopRequireDefault(_linearizeEncodings);\n\nvar _fixOptions = require('./help/fixOptions.js');\n\nvar _fixOptions2 = _interopRequireDefault(_fixOptions);\n\nvar _getRenderProperties = require('./help/getRenderProperties.js');\n\nvar _getRenderProperties2 = _interopRequireDefault(_getRenderProperties);\n\nvar _optionsFromStrings = require('./help/optionsFromStrings.js');\n\nvar _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings);\n\nvar _ErrorHandler = require('./exceptions/ErrorHandler.js');\n\nvar _ErrorHandler2 = _interopRequireDefault(_ErrorHandler);\n\nvar _exceptions = require('./exceptions/exceptions.js');\n\nvar _defaults = require('./options/defaults.js');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The protype of the object returned from the JsBarcode() call\n\n\n// Help functions\nvar API = function API() {};\n\n// The first call of the library API\n// Will return an object with all barcodes calls and the data that is used\n// by the renderers\n\n\n// Default values\n\n\n// Exceptions\n// Import all the barcodes\nvar JsBarcode = function JsBarcode(element, text, options) {\n\tvar api = new API();\n\n\tif (typeof element === \"undefined\") {\n\t\tthrow Error(\"No element to render on was provided.\");\n\t}\n\n\t// Variables that will be pased through the API calls\n\tapi._renderProperties = (0, _getRenderProperties2.default)(element);\n\tapi._encodings = [];\n\tapi._options = _defaults2.default;\n\tapi._errorHandler = new _ErrorHandler2.default(api);\n\n\t// If text is set, use the simple syntax (render the barcode directly)\n\tif (typeof text !== \"undefined\") {\n\t\toptions = options || {};\n\n\t\tif (!options.format) {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tapi.options(options)[options.format](text, options).render();\n\t}\n\n\treturn api;\n};\n\n// To make tests work TODO: remove\nJsBarcode.getModule = function (name) {\n\treturn _barcodes2.default[name];\n};\n\n// Register all barcodes\nfor (var name in _barcodes2.default) {\n\tif (_barcodes2.default.hasOwnProperty(name)) {\n\t\t// Security check if the propery is a prototype property\n\t\tregisterBarcode(_barcodes2.default, name);\n\t}\n}\nfunction registerBarcode(barcodes, name) {\n\tAPI.prototype[name] = API.prototype[name.toUpperCase()] = API.prototype[name.toLowerCase()] = function (text, options) {\n\t\tvar api = this;\n\t\treturn api._errorHandler.wrapBarcodeCall(function () {\n\t\t\t// Ensure text is options.text\n\t\t\toptions.text = typeof options.text === 'undefined' ? undefined : '' + options.text;\n\n\t\t\tvar newOptions = (0, _merge2.default)(api._options, options);\n\t\t\tnewOptions = (0, _optionsFromStrings2.default)(newOptions);\n\t\t\tvar Encoder = barcodes[name];\n\t\t\tvar encoded = encode(text, Encoder, newOptions);\n\t\t\tapi._encodings.push(encoded);\n\n\t\t\treturn api;\n\t\t});\n\t};\n}\n\n// encode() handles the Encoder call and builds the binary string to be rendered\nfunction encode(text, Encoder, options) {\n\t// Ensure that text is a string\n\ttext = \"\" + text;\n\n\tvar encoder = new Encoder(text, options);\n\n\t// If the input is not valid for the encoder, throw error.\n\t// If the valid callback option is set, call it instead of throwing error\n\tif (!encoder.valid()) {\n\t\tthrow new _exceptions.InvalidInputException(encoder.constructor.name, text);\n\t}\n\n\t// Make a request for the binary data (and other infromation) that should be rendered\n\tvar encoded = encoder.encode();\n\n\t// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n\t// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\tencoded = (0, _linearizeEncodings2.default)(encoded);\n\n\t// Merge\n\tfor (var i = 0; i < encoded.length; i++) {\n\t\tencoded[i].options = (0, _merge2.default)(options, encoded[i].options);\n\t}\n\n\treturn encoded;\n}\n\nfunction autoSelectBarcode() {\n\t// If CODE128 exists. Use it\n\tif (_barcodes2.default[\"CODE128\"]) {\n\t\treturn \"CODE128\";\n\t}\n\n\t// Else, take the first (probably only) barcode\n\treturn Object.keys(_barcodes2.default)[0];\n}\n\n// Sets global encoder options\n// Added to the api by the JsBarcode function\nAPI.prototype.options = function (options) {\n\tthis._options = (0, _merge2.default)(this._options, options);\n\treturn this;\n};\n\n// Will create a blank space (usually in between barcodes)\nAPI.prototype.blank = function (size) {\n\tvar zeroes = \"0\".repeat(size);\n\tthis._encodings.push({ data: zeroes });\n\treturn this;\n};\n\n// Initialize JsBarcode on all HTML elements defined.\nAPI.prototype.init = function () {\n\t// Should do nothing if no elements where found\n\tif (!this._renderProperties) {\n\t\treturn;\n\t}\n\n\t// Make sure renderProperies is an array\n\tif (!Array.isArray(this._renderProperties)) {\n\t\tthis._renderProperties = [this._renderProperties];\n\t}\n\n\tvar renderProperty;\n\tfor (var i in this._renderProperties) {\n\t\trenderProperty = this._renderProperties[i];\n\t\tvar options = (0, _merge2.default)(this._options, renderProperty.options);\n\n\t\tif (options.format == \"auto\") {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tthis._errorHandler.wrapBarcodeCall(function () {\n\t\t\tvar text = options.value;\n\t\t\tvar Encoder = _barcodes2.default[options.format.toUpperCase()];\n\t\t\tvar encoded = encode(text, Encoder, options);\n\n\t\t\trender(renderProperty, encoded, options);\n\t\t});\n\t}\n};\n\n// The render API call. Calls the real render function.\nAPI.prototype.render = function () {\n\tif (!this._renderProperties) {\n\t\tthrow new _exceptions.NoElementException();\n\t}\n\n\tif (Array.isArray(this._renderProperties)) {\n\t\tfor (var i = 0; i < this._renderProperties.length; i++) {\n\t\t\trender(this._renderProperties[i], this._encodings, this._options);\n\t\t}\n\t} else {\n\t\trender(this._renderProperties, this._encodings, this._options);\n\t}\n\n\treturn this;\n};\n\nAPI.prototype._defaults = _defaults2.default;\n\n// Prepares the encodings and calls the renderer\nfunction render(renderProperties, encodings, options) {\n\tencodings = (0, _linearizeEncodings2.default)(encodings);\n\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tencodings[i].options = (0, _merge2.default)(options, encodings[i].options);\n\t\t(0, _fixOptions2.default)(encodings[i].options);\n\t}\n\n\t(0, _fixOptions2.default)(options);\n\n\tvar Renderer = renderProperties.renderer;\n\tvar renderer = new Renderer(renderProperties.element, encodings, options);\n\trenderer.render();\n\n\tif (renderProperties.afterRender) {\n\t\trenderProperties.afterRender();\n\t}\n}\n\n// Export to browser\nif (typeof window !== \"undefined\") {\n\twindow.JsBarcode = JsBarcode;\n}\n\n// Export to jQuery\n/*global jQuery */\nif (typeof jQuery !== 'undefined') {\n\tjQuery.fn.JsBarcode = function (content, options) {\n\t\tvar elementArray = [];\n\t\tjQuery(this).each(function () {\n\t\t\telementArray.push(this);\n\t\t});\n\t\treturn JsBarcode(elementArray, content, options);\n\t};\n}\n\n// Export to commonJS\nmodule.exports = JsBarcode;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE = require('./CODE39/');\n\nvar _CODE2 = require('./CODE128/');\n\nvar _EAN_UPC = require('./EAN_UPC/');\n\nvar _ITF = require('./ITF14/');\n\nvar _ITF2 = require('./ITF/');\n\nvar _MSI = require('./MSI/');\n\nvar _pharmacode = require('./pharmacode/');\n\nvar _codabar = require('./codabar');\n\nvar _GenericBarcode = require('./GenericBarcode/');\n\nexports.default = {\n\tCODE39: _CODE.CODE39,\n\tCODE128: _CODE2.CODE128, CODE128A: _CODE2.CODE128A, CODE128B: _CODE2.CODE128B, CODE128C: _CODE2.CODE128C,\n\tEAN13: _EAN_UPC.EAN13, EAN8: _EAN_UPC.EAN8, EAN5: _EAN_UPC.EAN5, EAN2: _EAN_UPC.EAN2, UPC: _EAN_UPC.UPC,\n\tITF14: _ITF.ITF14,\n\tITF: _ITF2.ITF,\n\tMSI: _MSI.MSI, MSI10: _MSI.MSI10, MSI11: _MSI.MSI11, MSI1010: _MSI.MSI1010, MSI1110: _MSI.MSI1110,\n\tpharmacode: _pharmacode.pharmacode,\n\tcodabar: _codabar.codabar,\n\tGenericBarcode: _GenericBarcode.GenericBarcode\n};","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE39/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.CODE39 = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/Code_39#Encoding\n\nvar CODE39 = function (_Barcode) {\n\t_inherits(CODE39, _Barcode);\n\n\tfunction CODE39(data, options) {\n\t\t_classCallCheck(this, CODE39);\n\n\t\tdata = data.toUpperCase();\n\n\t\t// Calculate mod43 checksum if enabled\n\t\tif (options.mod43) {\n\t\t\tdata += getCharacter(mod43checksum(data));\n\t\t}\n\n\t\treturn _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\t}\n\n\tCODE39.prototype.encode = function encode() {\n\t\t// First character is always a *\n\t\tvar result = getEncoding(\"*\");\n\n\t\t// Take every character and add the binary representation to the result\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\tresult += getEncoding(this.data[i]) + \"0\";\n\t\t}\n\n\t\t// Last character is always a *\n\t\tresult += getEncoding(\"*\");\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\tCODE39.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n\t};\n\n\treturn CODE39;\n}(_Barcode3.default);\n\n// All characters. The position in the array is the (checksum) value\n\n\nvar characters = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \".\", \" \", \"$\", \"/\", \"+\", \"%\", \"*\"];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [20957, 29783, 23639, 30485, 20951, 29813, 23669, 20855, 29789, 23645, 29975, 23831, 30533, 22295, 30149, 24005, 21623, 29981, 23837, 22301, 30023, 23879, 30545, 22343, 30161, 24017, 21959, 30065, 23921, 22385, 29015, 18263, 29141, 17879, 29045, 18293, 17783, 29021, 18269, 17477, 17489, 17681, 20753, 35770];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n\treturn getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n\treturn encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n\treturn characters[characterValue];\n}\n\nfunction characterValue(character) {\n\treturn characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n\tvar checksum = 0;\n\tfor (var i = 0; i < data.length; i++) {\n\t\tchecksum += characterValue(data[i]);\n\t}\n\n\tchecksum = checksum % 43;\n\treturn checksum;\n}\n\nexports.CODE39 = CODE39;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/Barcode.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Barcode = function Barcode(data, options) {\n\t_classCallCheck(this, Barcode);\n\n\tthis.data = data;\n\tthis.text = options.text || data;\n\tthis.options = options;\n};\n\nexports.default = Barcode;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CODE128C = exports.CODE128B = exports.CODE128A = exports.CODE128 = undefined;\n\nvar _CODE128_AUTO = require('./CODE128_AUTO.js');\n\nvar _CODE128_AUTO2 = _interopRequireDefault(_CODE128_AUTO);\n\nvar _CODE128A = require('./CODE128A.js');\n\nvar _CODE128A2 = _interopRequireDefault(_CODE128A);\n\nvar _CODE128B = require('./CODE128B.js');\n\nvar _CODE128B2 = _interopRequireDefault(_CODE128B);\n\nvar _CODE128C = require('./CODE128C.js');\n\nvar _CODE128C2 = _interopRequireDefault(_CODE128C);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.CODE128 = _CODE128_AUTO2.default;\nexports.CODE128A = _CODE128A2.default;\nexports.CODE128B = _CODE128B2.default;\nexports.CODE128C = _CODE128C2.default;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/CODE128_AUTO.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128AUTO = function (_CODE) {\n\t_inherits(CODE128AUTO, _CODE);\n\n\tfunction CODE128AUTO(data, options) {\n\t\t_classCallCheck(this, CODE128AUTO);\n\n\t\t// ASCII value ranges 0-127, 200-211\n\t\tif (data.search(/^[\\x00-\\x7F\\xC8-\\xD3]+$/) !== -1) {\n\t\t\tvar _this = _possibleConstructorReturn(this, _CODE.call(this, autoSelectModes(data), options));\n\t\t} else {\n\t\t\tvar _this = _possibleConstructorReturn(this, _CODE.call(this, data, options));\n\t\t}\n\t\treturn _possibleConstructorReturn(_this);\n\t}\n\n\treturn CODE128AUTO;\n}(_CODE3.default);\n\nfunction autoSelectModes(string) {\n\t// ASCII ranges 0-98 and 200-207 (FUNCs and SHIFTs)\n\tvar aLength = string.match(/^[\\x00-\\x5F\\xC8-\\xCF]*/)[0].length;\n\t// ASCII ranges 32-127 and 200-207 (FUNCs and SHIFTs)\n\tvar bLength = string.match(/^[\\x20-\\x7F\\xC8-\\xCF]*/)[0].length;\n\t// Number pairs or [FNC1]\n\tvar cLength = string.match(/^(\\xCF*[0-9]{2}\\xCF*)*/)[0].length;\n\n\tvar newString;\n\t// Select CODE128C if the string start with enough digits\n\tif (cLength >= 2) {\n\t\tnewString = String.fromCharCode(210) + autoSelectFromC(string);\n\t}\n\t// Select A/C depending on the longest match\n\telse if (aLength > bLength) {\n\t\t\tnewString = String.fromCharCode(208) + autoSelectFromA(string);\n\t\t} else {\n\t\t\tnewString = String.fromCharCode(209) + autoSelectFromB(string);\n\t\t}\n\n\tnewString = newString.replace(/[\\xCD\\xCE]([^])[\\xCD\\xCE]/, function (match, char) {\n\t\treturn String.fromCharCode(203) + char;\n\t});\n\n\treturn newString;\n}\n\nfunction autoSelectFromA(string) {\n\tvar untilC = string.match(/^([\\x00-\\x5F\\xC8-\\xCF]+?)(([0-9]{2}){2,})([^0-9]|$)/);\n\n\tif (untilC) {\n\t\treturn untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n\t}\n\n\tvar aChars = string.match(/^[\\x00-\\x5F\\xC8-\\xCF]+/);\n\tif (aChars[0].length === string.length) {\n\t\treturn string;\n\t}\n\n\treturn aChars[0] + String.fromCharCode(205) + autoSelectFromB(string.substring(aChars[0].length));\n}\n\nfunction autoSelectFromB(string) {\n\tvar untilC = string.match(/^([\\x20-\\x7F\\xC8-\\xCF]+?)(([0-9]{2}){2,})([^0-9]|$)/);\n\n\tif (untilC) {\n\t\treturn untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n\t}\n\n\tvar bChars = string.match(/^[\\x20-\\x7F\\xC8-\\xCF]+/);\n\tif (bChars[0].length === string.length) {\n\t\treturn string;\n\t}\n\n\treturn bChars[0] + String.fromCharCode(206) + autoSelectFromA(string.substring(bChars[0].length));\n}\n\nfunction autoSelectFromC(string) {\n\tvar cMatch = string.match(/^(\\xCF*[0-9]{2}\\xCF*)+/)[0];\n\tvar length = cMatch.length;\n\n\tif (length === string.length) {\n\t\treturn string;\n\t}\n\n\tstring = string.substring(length);\n\n\t// Select A/B depending on the longest match\n\tvar aLength = string.match(/^[\\x00-\\x5F\\xC8-\\xCF]*/)[0].length;\n\tvar bLength = string.match(/^[\\x20-\\x7F\\xC8-\\xCF]*/)[0].length;\n\tif (aLength >= bLength) {\n\t\treturn cMatch + String.fromCharCode(206) + autoSelectFromA(string);\n\t} else {\n\t\treturn cMatch + String.fromCharCode(205) + autoSelectFromB(string);\n\t}\n}\n\nexports.default = CODE128AUTO;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/CODE128.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // This is the master class, it does require the start code to be\n// included in the string\n\nvar CODE128 = function (_Barcode) {\n\t_inherits(CODE128, _Barcode);\n\n\tfunction CODE128(data, options) {\n\t\t_classCallCheck(this, CODE128);\n\n\t\t// Fill the bytes variable with the ascii codes of string\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data.substring(1), options));\n\n\t\t_this.bytes = [];\n\t\tfor (var i = 0; i < data.length; ++i) {\n\t\t\t_this.bytes.push(data.charCodeAt(i));\n\t\t}\n\n\t\t// Data for each character, the last characters will not be encoded but are used for error correction\n\t\t// Numbers encode to (n + 1000) -> binary; 740 -> (740 + 1000).toString(2) -> \"11011001100\"\n\t\t_this.encodings = [// + 1000\n\t\t740, 644, 638, 176, 164, 100, 224, 220, 124, 608, 604, 572, 436, 244, 230, 484, 260, 254, 650, 628, 614, 764, 652, 902, 868, 836, 830, 892, 844, 842, 752, 734, 590, 304, 112, 94, 416, 128, 122, 672, 576, 570, 464, 422, 134, 496, 478, 142, 910, 678, 582, 768, 762, 774, 880, 862, 814, 896, 890, 818, 914, 602, 930, 328, 292, 200, 158, 68, 62, 424, 412, 232, 218, 76, 74, 554, 616, 978, 556, 146, 340, 212, 182, 508, 268, 266, 956, 940, 938, 758, 782, 974, 400, 310, 118, 512, 506, 960, 954, 502, 518, 886, 966, /* Start codes */668, 680, 692, 5379];\n\t\treturn _this;\n\t}\n\n\t// The public encoding function\n\n\n\tCODE128.prototype.encode = function encode() {\n\t\tvar encodingResult;\n\t\tvar bytes = this.bytes;\n\t\t// Remove the startcode from the bytes and set its index\n\t\tvar startIndex = bytes.shift() - 105;\n\n\t\t// Start encode with the right type\n\t\tif (startIndex === 103) {\n\t\t\tencodingResult = this.nextA(bytes, 1);\n\t\t} else if (startIndex === 104) {\n\t\t\tencodingResult = this.nextB(bytes, 1);\n\t\t} else if (startIndex === 105) {\n\t\t\tencodingResult = this.nextC(bytes, 1);\n\t\t} else {\n\t\t\tthrow new InvalidStartCharacterException();\n\t\t}\n\n\t\treturn {\n\t\t\ttext: this.text == this.data ? this.text.replace(/[^\\x20-\\x7E]/g, \"\") : this.text,\n\t\t\tdata:\n\t\t\t// Add the start bits\n\t\t\tthis.getEncoding(startIndex) +\n\t\t\t// Add the encoded bits\n\t\t\tencodingResult.result +\n\t\t\t// Add the checksum\n\t\t\tthis.getEncoding((encodingResult.checksum + startIndex) % 103) +\n\t\t\t// Add the end bits\n\t\t\tthis.getEncoding(106)\n\t\t};\n\t};\n\n\tCODE128.prototype.getEncoding = function getEncoding(n) {\n\t\treturn this.encodings[n] ? (this.encodings[n] + 1000).toString(2) : '';\n\t};\n\n\t// Use the regexp variable for validation\n\n\n\tCODE128.prototype.valid = function valid() {\n\t\t// ASCII value ranges 0-127, 200-211\n\t\treturn this.data.search(/^[\\x00-\\x7F\\xC8-\\xD3]+$/) !== -1;\n\t};\n\n\tCODE128.prototype.nextA = function nextA(bytes, depth) {\n\t\tif (bytes.length <= 0) {\n\t\t\treturn { \"result\": \"\", \"checksum\": 0 };\n\t\t}\n\n\t\tvar next, index;\n\n\t\t// Special characters\n\t\tif (bytes[0] >= 200) {\n\t\t\tindex = bytes[0] - 105;\n\n\t\t\t// Remove first element\n\t\t\tbytes.shift();\n\n\t\t\t// Swap to CODE128C\n\t\t\tif (index === 99) {\n\t\t\t\tnext = this.nextC(bytes, depth + 1);\n\t\t\t}\n\t\t\t// Swap to CODE128B\n\t\t\telse if (index === 100) {\n\t\t\t\t\tnext = this.nextB(bytes, depth + 1);\n\t\t\t\t}\n\t\t\t\t// Shift\n\t\t\t\telse if (index === 98) {\n\t\t\t\t\t\t// Convert the next character so that is encoded correctly\n\t\t\t\t\t\tbytes[0] = bytes[0] > 95 ? bytes[0] - 96 : bytes[0];\n\t\t\t\t\t\tnext = this.nextA(bytes, depth + 1);\n\t\t\t\t\t}\n\t\t\t\t\t// Continue on CODE128A but encode a special character\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tnext = this.nextA(bytes, depth + 1);\n\t\t\t\t\t\t}\n\t\t}\n\t\t// Continue encoding of CODE128A\n\t\telse {\n\t\t\t\tvar charCode = bytes[0];\n\t\t\t\tindex = charCode < 32 ? charCode + 64 : charCode - 32;\n\n\t\t\t\t// Remove first element\n\t\t\t\tbytes.shift();\n\n\t\t\t\tnext = this.nextA(bytes, depth + 1);\n\t\t\t}\n\n\t\t// Get the correct binary encoding and calculate the weight\n\t\tvar enc = this.getEncoding(index);\n\t\tvar weight = index * depth;\n\n\t\treturn {\n\t\t\t\"result\": enc + next.result,\n\t\t\t\"checksum\": weight + next.checksum\n\t\t};\n\t};\n\n\tCODE128.prototype.nextB = function nextB(bytes, depth) {\n\t\tif (bytes.length <= 0) {\n\t\t\treturn { \"result\": \"\", \"checksum\": 0 };\n\t\t}\n\n\t\tvar next, index;\n\n\t\t// Special characters\n\t\tif (bytes[0] >= 200) {\n\t\t\tindex = bytes[0] - 105;\n\n\t\t\t// Remove first element\n\t\t\tbytes.shift();\n\n\t\t\t// Swap to CODE128C\n\t\t\tif (index === 99) {\n\t\t\t\tnext = this.nextC(bytes, depth + 1);\n\t\t\t}\n\t\t\t// Swap to CODE128A\n\t\t\telse if (index === 101) {\n\t\t\t\t\tnext = this.nextA(bytes, depth + 1);\n\t\t\t\t}\n\t\t\t\t// Shift\n\t\t\t\telse if (index === 98) {\n\t\t\t\t\t\t// Convert the next character so that is encoded correctly\n\t\t\t\t\t\tbytes[0] = bytes[0] < 32 ? bytes[0] + 96 : bytes[0];\n\t\t\t\t\t\tnext = this.nextB(bytes, depth + 1);\n\t\t\t\t\t}\n\t\t\t\t\t// Continue on CODE128B but encode a special character\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tnext = this.nextB(bytes, depth + 1);\n\t\t\t\t\t\t}\n\t\t}\n\t\t// Continue encoding of CODE128B\n\t\telse {\n\t\t\t\tindex = bytes[0] - 32;\n\t\t\t\tbytes.shift();\n\t\t\t\tnext = this.nextB(bytes, depth + 1);\n\t\t\t}\n\n\t\t// Get the correct binary encoding and calculate the weight\n\t\tvar enc = this.getEncoding(index);\n\t\tvar weight = index * depth;\n\n\t\treturn { \"result\": enc + next.result, \"checksum\": weight + next.checksum };\n\t};\n\n\tCODE128.prototype.nextC = function nextC(bytes, depth) {\n\t\tif (bytes.length <= 0) {\n\t\t\treturn { \"result\": \"\", \"checksum\": 0 };\n\t\t}\n\n\t\tvar next, index;\n\n\t\t// Special characters\n\t\tif (bytes[0] >= 200) {\n\t\t\tindex = bytes[0] - 105;\n\n\t\t\t// Remove first element\n\t\t\tbytes.shift();\n\n\t\t\t// Swap to CODE128B\n\t\t\tif (index === 100) {\n\t\t\t\tnext = this.nextB(bytes, depth + 1);\n\t\t\t}\n\t\t\t// Swap to CODE128A\n\t\t\telse if (index === 101) {\n\t\t\t\t\tnext = this.nextA(bytes, depth + 1);\n\t\t\t\t}\n\t\t\t\t// Continue on CODE128C but encode a special character\n\t\t\t\telse {\n\t\t\t\t\t\tnext = this.nextC(bytes, depth + 1);\n\t\t\t\t\t}\n\t\t}\n\t\t// Continue encoding of CODE128C\n\t\telse {\n\t\t\t\tindex = (bytes[0] - 48) * 10 + bytes[1] - 48;\n\t\t\t\tbytes.shift();\n\t\t\t\tbytes.shift();\n\t\t\t\tnext = this.nextC(bytes, depth + 1);\n\t\t\t}\n\n\t\t// Get the correct binary encoding and calculate the weight\n\t\tvar enc = this.getEncoding(index);\n\t\tvar weight = index * depth;\n\n\t\treturn { \"result\": enc + next.result, \"checksum\": weight + next.checksum };\n\t};\n\n\treturn CODE128;\n}(_Barcode3.default);\n\nvar InvalidStartCharacterException = function (_Error) {\n\t_inherits(InvalidStartCharacterException, _Error);\n\n\tfunction InvalidStartCharacterException() {\n\t\t_classCallCheck(this, InvalidStartCharacterException);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, _Error.call(this));\n\n\t\t_this2.name = \"InvalidStartCharacterException\";\n\t\t_this2.message = \"The encoding does not start with a start character.\";\n\t\treturn _this2;\n\t}\n\n\treturn InvalidStartCharacterException;\n}(Error);\n\nexports.default = CODE128;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/CODE128A.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128A = function (_CODE) {\n\t_inherits(CODE128A, _CODE);\n\n\tfunction CODE128A(string, options) {\n\t\t_classCallCheck(this, CODE128A);\n\n\t\treturn _possibleConstructorReturn(this, _CODE.call(this, String.fromCharCode(208) + string, options));\n\t}\n\n\tCODE128A.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[\\x00-\\x5F\\xC8-\\xCF]+$/) !== -1;\n\t};\n\n\treturn CODE128A;\n}(_CODE3.default);\n\nexports.default = CODE128A;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/CODE128B.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128B = function (_CODE) {\n\t_inherits(CODE128B, _CODE);\n\n\tfunction CODE128B(string, options) {\n\t\t_classCallCheck(this, CODE128B);\n\n\t\treturn _possibleConstructorReturn(this, _CODE.call(this, String.fromCharCode(209) + string, options));\n\t}\n\n\tCODE128B.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[\\x20-\\x7F\\xC8-\\xCF]+$/) !== -1;\n\t};\n\n\treturn CODE128B;\n}(_CODE3.default);\n\nexports.default = CODE128B;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/CODE128/CODE128C.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _CODE2 = require('./CODE128.js');\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CODE128C = function (_CODE) {\n\t_inherits(CODE128C, _CODE);\n\n\tfunction CODE128C(string, options) {\n\t\t_classCallCheck(this, CODE128C);\n\n\t\treturn _possibleConstructorReturn(this, _CODE.call(this, String.fromCharCode(210) + string, options));\n\t}\n\n\tCODE128C.prototype.valid = function valid() {\n\t\treturn this.data.search(/^(\\xCF*[0-9]{2}\\xCF*)+$/) !== -1;\n\t};\n\n\treturn CODE128C;\n}(_CODE3.default);\n\nexports.default = CODE128C;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPC = exports.EAN2 = exports.EAN5 = exports.EAN8 = exports.EAN13 = undefined;\n\nvar _EAN = require('./EAN13.js');\n\nvar _EAN2 = _interopRequireDefault(_EAN);\n\nvar _EAN3 = require('./EAN8.js');\n\nvar _EAN4 = _interopRequireDefault(_EAN3);\n\nvar _EAN5 = require('./EAN5.js');\n\nvar _EAN6 = _interopRequireDefault(_EAN5);\n\nvar _EAN7 = require('./EAN2.js');\n\nvar _EAN8 = _interopRequireDefault(_EAN7);\n\nvar _UPC = require('./UPC.js');\n\nvar _UPC2 = _interopRequireDefault(_UPC);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.EAN13 = _EAN2.default;\nexports.EAN8 = _EAN4.default;\nexports.EAN5 = _EAN6.default;\nexports.EAN2 = _EAN8.default;\nexports.UPC = _UPC2.default;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/EAN13.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ean_encoder = require(\"./ean_encoder.js\");\n\nvar _ean_encoder2 = _interopRequireDefault(_ean_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Binary_encoding_of_data_digits_into_EAN-13_barcode\n\nvar EAN13 = function (_Barcode) {\n\t_inherits(EAN13, _Barcode);\n\n\tfunction EAN13(data, options) {\n\t\t_classCallCheck(this, EAN13);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{12}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\tif (!options.flat && options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\n\t\t// Adds a last character to the end of the barcode\n\t\t_this.lastChar = options.lastChar;\n\t\treturn _this;\n\t}\n\n\tEAN13.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{13}$/) !== -1 && this.data[12] == checksum(this.data);\n\t};\n\n\tEAN13.prototype.encode = function encode() {\n\t\tif (this.options.flat) {\n\t\t\treturn this.flatEncoding();\n\t\t} else {\n\t\t\treturn this.guardedEncoding();\n\t\t}\n\t};\n\n\t// Define the EAN-13 structure\n\n\n\tEAN13.prototype.getStructure = function getStructure() {\n\t\treturn [\"LLLLLL\", \"LLGLGG\", \"LLGGLG\", \"LLGGGL\", \"LGLLGG\", \"LGGLLG\", \"LGGGLL\", \"LGLGLG\", \"LGLGGL\", \"LGGLGL\"];\n\t};\n\n\t// The \"standard\" way of printing EAN13 barcodes with guard bars\n\n\n\tEAN13.prototype.guardedEncoding = function guardedEncoding() {\n\t\tvar encoder = new _ean_encoder2.default();\n\t\tvar result = [];\n\n\t\tvar structure = this.getStructure()[this.data[0]];\n\n\t\t// Get the string to be encoded on the left side of the EAN code\n\t\tvar leftSide = this.data.substr(1, 6);\n\n\t\t// Get the string to be encoded on the right side of the EAN code\n\t\tvar rightSide = this.data.substr(7, 6);\n\n\t\t// Add the first digigt\n\t\tif (this.options.displayValue) {\n\t\t\tresult.push({\n\t\t\t\tdata: \"000000000000\",\n\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\n\t\t// Add the guard bars\n\t\tresult.push({\n\t\t\tdata: \"101\",\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the left side\n\t\tresult.push({\n\t\t\tdata: encoder.encode(leftSide, structure),\n\t\t\ttext: this.text.substr(1, 6),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the middle bits\n\t\tresult.push({\n\t\t\tdata: \"01010\",\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the right side\n\t\tresult.push({\n\t\t\tdata: encoder.encode(rightSide, \"RRRRRR\"),\n\t\t\ttext: this.text.substr(7, 6),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the end bits\n\t\tresult.push({\n\t\t\tdata: \"101\",\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\tif (this.options.lastChar && this.options.displayValue) {\n\t\t\tresult.push({ data: \"00\" });\n\n\t\t\tresult.push({\n\t\t\t\tdata: \"00000\",\n\t\t\t\ttext: this.options.lastChar,\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t};\n\n\tEAN13.prototype.flatEncoding = function flatEncoding() {\n\t\tvar encoder = new _ean_encoder2.default();\n\t\tvar result = \"\";\n\n\t\tvar structure = this.getStructure()[this.data[0]];\n\n\t\tresult += \"101\";\n\t\tresult += encoder.encode(this.data.substr(1, 6), structure);\n\t\tresult += \"01010\";\n\t\tresult += encoder.encode(this.data.substr(7, 6), \"RRRRRR\");\n\t\tresult += \"101\";\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\treturn EAN13;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 0; i < 12; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 1; i < 12; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\nexports.default = EAN13;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/ean_encoder.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EANencoder = function () {\n\tfunction EANencoder() {\n\t\t_classCallCheck(this, EANencoder);\n\n\t\t// Standard start end and middle bits\n\t\tthis.startBin = \"101\";\n\t\tthis.endBin = \"101\";\n\t\tthis.middleBin = \"01010\";\n\n\t\t// The L (left) type of encoding\n\t\tthis.Lbinary = [\"0001101\", \"0011001\", \"0010011\", \"0111101\", \"0100011\", \"0110001\", \"0101111\", \"0111011\", \"0110111\", \"0001011\"];\n\n\t\t// The G type of encoding\n\t\tthis.Gbinary = [\"0100111\", \"0110011\", \"0011011\", \"0100001\", \"0011101\", \"0111001\", \"0000101\", \"0010001\", \"0001001\", \"0010111\"];\n\n\t\t// The R (right) type of encoding\n\t\tthis.Rbinary = [\"1110010\", \"1100110\", \"1101100\", \"1000010\", \"1011100\", \"1001110\", \"1010000\", \"1000100\", \"1001000\", \"1110100\"];\n\t}\n\n\t// Convert a numberarray to the representing\n\n\n\tEANencoder.prototype.encode = function encode(number, structure, separator) {\n\t\t// Create the variable that should be returned at the end of the function\n\t\tvar result = \"\";\n\n\t\t// Make sure that the separator is set\n\t\tseparator = separator || \"\";\n\n\t\t// Loop all the numbers\n\t\tfor (var i = 0; i < number.length; i++) {\n\t\t\t// Using the L, G or R encoding and add it to the returning variable\n\t\t\tif (structure[i] == \"L\") {\n\t\t\t\tresult += this.Lbinary[number[i]];\n\t\t\t} else if (structure[i] == \"G\") {\n\t\t\t\tresult += this.Gbinary[number[i]];\n\t\t\t} else if (structure[i] == \"R\") {\n\t\t\t\tresult += this.Rbinary[number[i]];\n\t\t\t}\n\n\t\t\t// Add separator in between encodings\n\t\t\tif (i < number.length - 1) {\n\t\t\t\tresult += separator;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn EANencoder;\n}();\n\nexports.default = EANencoder;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/EAN8.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ean_encoder = require(\"./ean_encoder.js\");\n\nvar _ean_encoder2 = _interopRequireDefault(_ean_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// http://www.barcodeisland.com/ean8.phtml\n\nvar EAN8 = function (_Barcode) {\n\t_inherits(EAN8, _Barcode);\n\n\tfunction EAN8(data, options) {\n\t\t_classCallCheck(this, EAN8);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{7}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\treturn _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\t}\n\n\tEAN8.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{8}$/) !== -1 && this.data[7] == checksum(this.data);\n\t};\n\n\tEAN8.prototype.encode = function encode() {\n\t\tvar encoder = new _ean_encoder2.default();\n\n\t\t// Create the return variable\n\t\tvar result = \"\";\n\n\t\t// Get the number to be encoded on the left side of the EAN code\n\t\tvar leftSide = this.data.substr(0, 4);\n\n\t\t// Get the number to be encoded on the right side of the EAN code\n\t\tvar rightSide = this.data.substr(4, 4);\n\n\t\t// Add the start bits\n\t\tresult += encoder.startBin;\n\n\t\t// Add the left side\n\t\tresult += encoder.encode(leftSide, \"LLLL\");\n\n\t\t// Add the middle bits\n\t\tresult += encoder.middleBin;\n\n\t\t// Add the right side\n\t\tresult += encoder.encode(rightSide, \"RRRR\");\n\n\t\t// Add the end bits\n\t\tresult += encoder.endBin;\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\treturn EAN8;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n\n\nfunction checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 0; i < 7; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\tfor (i = 1; i < 7; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\nexports.default = EAN8;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/EAN5.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ean_encoder = require(\"./ean_encoder.js\");\n\nvar _ean_encoder2 = _interopRequireDefault(_ean_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_5#Encoding\n\nvar EAN5 = function (_Barcode) {\n\t_inherits(EAN5, _Barcode);\n\n\tfunction EAN5(data, options) {\n\t\t_classCallCheck(this, EAN5);\n\n\t\t// Define the EAN-13 structure\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.structure = [\"GGLLL\", \"GLGLL\", \"GLLGL\", \"GLLLG\", \"LGGLL\", \"LLGGL\", \"LLLGG\", \"LGLGL\", \"LGLLG\", \"LLGLG\"];\n\t\treturn _this;\n\t}\n\n\tEAN5.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{5}$/) !== -1;\n\t};\n\n\tEAN5.prototype.encode = function encode() {\n\t\tvar encoder = new _ean_encoder2.default();\n\t\tvar checksum = this.checksum();\n\n\t\t// Start bits\n\t\tvar result = \"1011\";\n\n\t\t// Use normal ean encoding with 01 in between all digits\n\t\tresult += encoder.encode(this.data, this.structure[checksum], \"01\");\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\tEAN5.prototype.checksum = function checksum() {\n\t\tvar result = 0;\n\n\t\tresult += parseInt(this.data[0]) * 3;\n\t\tresult += parseInt(this.data[1]) * 9;\n\t\tresult += parseInt(this.data[2]) * 3;\n\t\tresult += parseInt(this.data[3]) * 9;\n\t\tresult += parseInt(this.data[4]) * 3;\n\n\t\treturn result % 10;\n\t};\n\n\treturn EAN5;\n}(_Barcode3.default);\n\nexports.default = EAN5;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/EAN2.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ean_encoder = require(\"./ean_encoder.js\");\n\nvar _ean_encoder2 = _interopRequireDefault(_ean_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_2#Encoding\n\nvar EAN2 = function (_Barcode) {\n\t_inherits(EAN2, _Barcode);\n\n\tfunction EAN2(data, options) {\n\t\t_classCallCheck(this, EAN2);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.structure = [\"LL\", \"LG\", \"GL\", \"GG\"];\n\t\treturn _this;\n\t}\n\n\tEAN2.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{2}$/) !== -1;\n\t};\n\n\tEAN2.prototype.encode = function encode() {\n\t\tvar encoder = new _ean_encoder2.default();\n\n\t\t// Choose the structure based on the number mod 4\n\t\tvar structure = this.structure[parseInt(this.data) % 4];\n\n\t\t// Start bits\n\t\tvar result = \"1011\";\n\n\t\t// Encode the two digits with 01 in between\n\t\tresult += encoder.encode(this.data, structure, \"01\");\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\treturn EAN2;\n}(_Barcode3.default);\n\nexports.default = EAN2;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/EAN_UPC/UPC.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ean_encoder = require(\"./ean_encoder.js\");\n\nvar _ean_encoder2 = _interopRequireDefault(_ean_encoder);\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nvar UPC = function (_Barcode) {\n\t_inherits(UPC, _Barcode);\n\n\tfunction UPC(data, options) {\n\t\t_classCallCheck(this, UPC);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{11}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tUPC.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum(this.data);\n\t};\n\n\tUPC.prototype.encode = function encode() {\n\t\tif (this.options.flat) {\n\t\t\treturn this.flatEncoding();\n\t\t} else {\n\t\t\treturn this.guardedEncoding();\n\t\t}\n\t};\n\n\tUPC.prototype.flatEncoding = function flatEncoding() {\n\t\tvar encoder = new _ean_encoder2.default();\n\t\tvar result = \"\";\n\n\t\tresult += \"101\";\n\t\tresult += encoder.encode(this.data.substr(0, 6), \"LLLLLL\");\n\t\tresult += \"01010\";\n\t\tresult += encoder.encode(this.data.substr(6, 6), \"RRRRRR\");\n\t\tresult += \"101\";\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\tUPC.prototype.guardedEncoding = function guardedEncoding() {\n\t\tvar encoder = new _ean_encoder2.default();\n\t\tvar result = [];\n\n\t\t// Add the first digigt\n\t\tif (this.displayValue) {\n\t\t\tresult.push({\n\t\t\t\tdata: \"00000000\",\n\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\n\t\t// Add the guard bars\n\t\tresult.push({\n\t\t\tdata: \"101\" + encoder.encode(this.data[0], \"L\"),\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the left side\n\t\tresult.push({\n\t\t\tdata: encoder.encode(this.data.substr(1, 5), \"LLLLL\"),\n\t\t\ttext: this.text.substr(1, 5),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the middle bits\n\t\tresult.push({\n\t\t\tdata: \"01010\",\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the right side\n\t\tresult.push({\n\t\t\tdata: encoder.encode(this.data.substr(6, 5), \"RRRRR\"),\n\t\t\ttext: this.text.substr(6, 5),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the end bits\n\t\tresult.push({\n\t\t\tdata: encoder.encode(this.data[11], \"R\") + \"101\",\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the last digit\n\t\tif (this.displayValue) {\n\t\t\tresult.push({\n\t\t\t\tdata: \"00000000\",\n\t\t\t\ttext: this.text.substr(11, 1),\n\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn UPC;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 1; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 0; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\nexports.default = UPC;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/ITF14/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.ITF14 = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ITF14 = function (_Barcode) {\n\t_inherits(ITF14, _Barcode);\n\n\tfunction ITF14(data, options) {\n\t\t_classCallCheck(this, ITF14);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{13}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tITF14.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]{14}$/) !== -1 && this.data[13] == checksum(this.data);\n\t};\n\n\tITF14.prototype.encode = function encode() {\n\t\tvar result = \"1010\";\n\n\t\t// Calculate all the digit pairs\n\t\tfor (var i = 0; i < 14; i += 2) {\n\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t}\n\n\t\t// Always add the same end bits\n\t\tresult += \"11101\";\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\t// Calculate the data of a number pair\n\n\n\tITF14.prototype.calculatePair = function calculatePair(numberPair) {\n\t\tvar result = \"\";\n\n\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t// Take every second bit and add to the result\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn ITF14;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n\n\nfunction checksum(data) {\n\tvar result = 0;\n\n\tfor (var i = 0; i < 13; i++) {\n\t\tresult += parseInt(data[i]) * (3 - i % 2 * 2);\n\t}\n\n\treturn Math.ceil(result / 10) * 10 - result;\n}\n\nexports.ITF14 = ITF14;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/ITF/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.ITF = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ITF = function (_Barcode) {\n\t_inherits(ITF, _Barcode);\n\n\tfunction ITF(data, options) {\n\t\t_classCallCheck(this, ITF);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tITF.prototype.valid = function valid() {\n\t\treturn this.data.search(/^([0-9]{2})+$/) !== -1;\n\t};\n\n\tITF.prototype.encode = function encode() {\n\t\t// Always add the same start bits\n\t\tvar result = \"1010\";\n\n\t\t// Calculate all the digit pairs\n\t\tfor (var i = 0; i < this.data.length; i += 2) {\n\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t}\n\n\t\t// Always add the same end bits\n\t\tresult += \"11101\";\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\t// Calculate the data of a number pair\n\n\n\tITF.prototype.calculatePair = function calculatePair(numberPair) {\n\t\tvar result = \"\";\n\n\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t// Take every second bit and add to the result\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn ITF;\n}(_Barcode3.default);\n\nexports.ITF = ITF;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MSI1110 = exports.MSI1010 = exports.MSI11 = exports.MSI10 = exports.MSI = undefined;\n\nvar _MSI = require('./MSI.js');\n\nvar _MSI2 = _interopRequireDefault(_MSI);\n\nvar _MSI3 = require('./MSI10.js');\n\nvar _MSI4 = _interopRequireDefault(_MSI3);\n\nvar _MSI5 = require('./MSI11.js');\n\nvar _MSI6 = _interopRequireDefault(_MSI5);\n\nvar _MSI7 = require('./MSI1010.js');\n\nvar _MSI8 = _interopRequireDefault(_MSI7);\n\nvar _MSI9 = require('./MSI1110.js');\n\nvar _MSI10 = _interopRequireDefault(_MSI9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.MSI = _MSI2.default;\nexports.MSI10 = _MSI4.default;\nexports.MSI11 = _MSI6.default;\nexports.MSI1010 = _MSI8.default;\nexports.MSI1110 = _MSI10.default;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/MSI.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nvar MSI = function (_Barcode) {\n\t_inherits(MSI, _Barcode);\n\n\tfunction MSI(data, options) {\n\t\t_classCallCheck(this, MSI);\n\n\t\treturn _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\t}\n\n\tMSI.prototype.encode = function encode() {\n\t\t// Start bits\n\t\tvar ret = \"110\";\n\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// Convert the character to binary (always 4 binary digits)\n\t\t\tvar digit = parseInt(this.data[i]);\n\t\t\tvar bin = digit.toString(2);\n\t\t\tbin = addZeroes(bin, 4 - bin.length);\n\n\t\t\t// Add 100 for every zero and 110 for every 1\n\t\t\tfor (var b = 0; b < bin.length; b++) {\n\t\t\t\tret += bin[b] == \"0\" ? \"100\" : \"110\";\n\t\t\t}\n\t\t}\n\n\t\t// End bits\n\t\tret += \"1001\";\n\n\t\treturn {\n\t\t\tdata: ret,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\tMSI.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[0-9]+$/) !== -1;\n\t};\n\n\treturn MSI;\n}(_Barcode3.default);\n\nfunction addZeroes(number, n) {\n\tfor (var i = 0; i < n; i++) {\n\t\tnumber = \"0\" + number;\n\t}\n\treturn number;\n}\n\nexports.default = MSI;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/MSI10.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI10 = function (_MSI) {\n\t_inherits(MSI10, _MSI);\n\n\tfunction MSI10(data, options) {\n\t\t_classCallCheck(this, MSI10);\n\n\t\treturn _possibleConstructorReturn(this, _MSI.call(this, data + (0, _checksums.mod10)(data), options));\n\t}\n\n\treturn MSI10;\n}(_MSI3.default);\n\nexports.default = MSI10;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/checksums.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.mod10 = mod10;\nexports.mod11 = mod11;\nfunction mod10(number) {\n\tvar sum = 0;\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[i]);\n\t\tif ((i + number.length) % 2 === 0) {\n\t\t\tsum += n;\n\t\t} else {\n\t\t\tsum += n * 2 % 10 + Math.floor(n * 2 / 10);\n\t\t}\n\t}\n\treturn (10 - sum % 10) % 10;\n}\n\nfunction mod11(number) {\n\tvar sum = 0;\n\tvar weights = [2, 3, 4, 5, 6, 7];\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[number.length - 1 - i]);\n\t\tsum += weights[i % weights.length] * n;\n\t}\n\treturn (11 - sum % 11) % 11;\n}","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/MSI11.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI11 = function (_MSI) {\n\t_inherits(MSI11, _MSI);\n\n\tfunction MSI11(data, options) {\n\t\t_classCallCheck(this, MSI11);\n\n\t\treturn _possibleConstructorReturn(this, _MSI.call(this, data + (0, _checksums.mod11)(data), options));\n\t}\n\n\treturn MSI11;\n}(_MSI3.default);\n\nexports.default = MSI11;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/MSI1010.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI1010 = function (_MSI) {\n\t_inherits(MSI1010, _MSI);\n\n\tfunction MSI1010(data, options) {\n\t\t_classCallCheck(this, MSI1010);\n\n\t\tdata += (0, _checksums.mod10)(data);\n\t\tdata += (0, _checksums.mod10)(data);\n\t\treturn _possibleConstructorReturn(this, _MSI.call(this, data, options));\n\t}\n\n\treturn MSI1010;\n}(_MSI3.default);\n\nexports.default = MSI1010;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/MSI/MSI1110.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _MSI2 = require('./MSI.js');\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = require('./checksums.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MSI1110 = function (_MSI) {\n\t_inherits(MSI1110, _MSI);\n\n\tfunction MSI1110(data, options) {\n\t\t_classCallCheck(this, MSI1110);\n\n\t\tdata += (0, _checksums.mod11)(data);\n\t\tdata += (0, _checksums.mod10)(data);\n\t\treturn _possibleConstructorReturn(this, _MSI.call(this, data, options));\n\t}\n\n\treturn MSI1110;\n}(_MSI3.default);\n\nexports.default = MSI1110;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/pharmacode/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.pharmacode = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding documentation\n// http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf\n\nvar pharmacode = function (_Barcode) {\n\t_inherits(pharmacode, _Barcode);\n\n\tfunction pharmacode(data, options) {\n\t\t_classCallCheck(this, pharmacode);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data, options));\n\n\t\t_this.number = parseInt(data, 10);\n\t\treturn _this;\n\t}\n\n\tpharmacode.prototype.encode = function encode() {\n\t\tvar z = this.number;\n\t\tvar result = \"\";\n\n\t\t// http://i.imgur.com/RMm4UDJ.png\n\t\t// (source: http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf, page: 34)\n\t\twhile (!isNaN(z) && z != 0) {\n\t\t\tif (z % 2 === 0) {\n\t\t\t\t// Even\n\t\t\t\tresult = \"11100\" + result;\n\t\t\t\tz = (z - 2) / 2;\n\t\t\t} else {\n\t\t\t\t// Odd\n\t\t\t\tresult = \"100\" + result;\n\t\t\t\tz = (z - 1) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Remove the two last zeroes\n\t\tresult = result.slice(0, -2);\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\tpharmacode.prototype.valid = function valid() {\n\t\treturn this.number >= 3 && this.number <= 131070;\n\t};\n\n\treturn pharmacode;\n}(_Barcode3.default);\n\nexports.pharmacode = pharmacode;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/codabar/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.codabar = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Encoding specification:\n// http://www.barcodeisland.com/codabar.phtml\n\nvar codabar = function (_Barcode) {\n\t_inherits(codabar, _Barcode);\n\n\tfunction codabar(data, options) {\n\t\t_classCallCheck(this, codabar);\n\n\t\tif (data.search(/^[0-9\\-\\$\\:\\.\\+\\/]+$/) === 0) {\n\t\t\tdata = \"A\" + data + \"A\";\n\t\t}\n\n\t\tvar _this = _possibleConstructorReturn(this, _Barcode.call(this, data.toUpperCase(), options));\n\n\t\t_this.text = _this.options.text || _this.text.replace(/[A-D]/g, '');\n\t\treturn _this;\n\t}\n\n\tcodabar.prototype.valid = function valid() {\n\t\treturn this.data.search(/^[A-D][0-9\\-\\$\\:\\.\\+\\/]+[A-D]$/) !== -1;\n\t};\n\n\tcodabar.prototype.encode = function encode() {\n\t\tvar result = [];\n\t\tvar encodings = this.getEncodings();\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\tresult.push(encodings[this.data.charAt(i)]);\n\t\t\t// for all characters except the last, append a narrow-space (\"0\")\n\t\t\tif (i !== this.data.length - 1) {\n\t\t\t\tresult.push(\"0\");\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttext: this.text,\n\t\t\tdata: result.join('')\n\t\t};\n\t};\n\n\tcodabar.prototype.getEncodings = function getEncodings() {\n\t\treturn {\n\t\t\t\"0\": \"101010011\",\n\t\t\t\"1\": \"101011001\",\n\t\t\t\"2\": \"101001011\",\n\t\t\t\"3\": \"110010101\",\n\t\t\t\"4\": \"101101001\",\n\t\t\t\"5\": \"110101001\",\n\t\t\t\"6\": \"100101011\",\n\t\t\t\"7\": \"100101101\",\n\t\t\t\"8\": \"100110101\",\n\t\t\t\"9\": \"110100101\",\n\t\t\t\"-\": \"101001101\",\n\t\t\t\"$\": \"101100101\",\n\t\t\t\":\": \"1101011011\",\n\t\t\t\"/\": \"1101101011\",\n\t\t\t\".\": \"1101101101\",\n\t\t\t\"+\": \"101100110011\",\n\t\t\t\"A\": \"1011001001\",\n\t\t\t\"B\": \"1010010011\",\n\t\t\t\"C\": \"1001001011\",\n\t\t\t\"D\": \"1010011001\"\n\t\t};\n\t};\n\n\treturn codabar;\n}(_Barcode3.default);\n\nexports.codabar = codabar;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/barcodes/GenericBarcode/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.GenericBarcode = undefined;\n\nvar _Barcode2 = require(\"../Barcode.js\");\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GenericBarcode = function (_Barcode) {\n\t_inherits(GenericBarcode, _Barcode);\n\n\tfunction GenericBarcode(data, options) {\n\t\t_classCallCheck(this, GenericBarcode);\n\n\t\treturn _possibleConstructorReturn(this, _Barcode.call(this, data, options)); // Sets this.data and this.text\n\t}\n\n\t// Return the corresponding binary numbers for the data provided\n\n\n\tGenericBarcode.prototype.encode = function encode() {\n\t\treturn {\n\t\t\tdata: \"10101010101010101010101010101010101010101\",\n\t\t\ttext: this.text\n\t\t};\n\t};\n\n\t// Resturn true/false if the string provided is valid for this encoder\n\n\n\tGenericBarcode.prototype.valid = function valid() {\n\t\treturn true;\n\t};\n\n\treturn GenericBarcode;\n}(_Barcode3.default);\n\nexports.GenericBarcode = GenericBarcode;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/merge.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = merge;\n\n\nfunction merge(old, replaceObj) {\n\tvar newMerge = {};\n\tvar k;\n\tfor (k in old) {\n\t\tif (old.hasOwnProperty(k)) {\n\t\t\tnewMerge[k] = old[k];\n\t\t}\n\t}\n\tfor (k in replaceObj) {\n\t\tif (replaceObj.hasOwnProperty(k) && typeof replaceObj[k] !== \"undefined\") {\n\t\t\tnewMerge[k] = replaceObj[k];\n\t\t}\n\t}\n\treturn newMerge;\n}","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/linearizeEncodings.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = linearizeEncodings;\n\n// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\nfunction linearizeEncodings(encodings) {\n\tvar linearEncodings = [];\n\tfunction nextLevel(encoded) {\n\t\tif (Array.isArray(encoded)) {\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tnextLevel(encoded[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tencoded.text = encoded.text || \"\";\n\t\t\tencoded.data = encoded.data || \"\";\n\t\t\tlinearEncodings.push(encoded);\n\t\t}\n\t}\n\tnextLevel(encodings);\n\n\treturn linearEncodings;\n}","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/fixOptions.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = fixOptions;\n\n\nfunction fixOptions(options) {\n\t// Fix the margins\n\toptions.marginTop = options.marginTop || options.margin;\n\toptions.marginBottom = options.marginBottom || options.margin;\n\toptions.marginRight = options.marginRight || options.margin;\n\toptions.marginLeft = options.marginLeft || options.margin;\n\n\treturn options;\n}","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/getRenderProperties.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /* global HTMLImageElement */\n/* global HTMLCanvasElement */\n/* global SVGElement */\n\nvar _getOptionsFromElement = require(\"./getOptionsFromElement.js\");\n\nvar _getOptionsFromElement2 = _interopRequireDefault(_getOptionsFromElement);\n\nvar _renderers = require(\"../renderers\");\n\nvar _renderers2 = _interopRequireDefault(_renderers);\n\nvar _exceptions = require(\"../exceptions/exceptions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\nfunction getRenderProperties(element) {\n\t// If the element is a string, query select call again\n\tif (typeof element === \"string\") {\n\t\treturn querySelectedRenderProperties(element);\n\t}\n\t// If element is array. Recursivly call with every object in the array\n\telse if (Array.isArray(element)) {\n\t\t\tvar returnArray = [];\n\t\t\tfor (var i = 0; i < element.length; i++) {\n\t\t\t\treturnArray.push(getRenderProperties(element[i]));\n\t\t\t}\n\t\t\treturn returnArray;\n\t\t}\n\t\t// If element, render on canvas and set the uri as src\n\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n\t\t\t\treturn newCanvasRenderProperties(element);\n\t\t\t}\n\t\t\t// If SVG\n\t\t\telse if (typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: element,\n\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\trenderer: _renderers2.default.SVGRenderer\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// If canvas (in browser)\n\t\t\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// If canvas (in node)\n\t\t\t\t\telse if (element && element.getContext) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.ObjectRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new _exceptions.InvalidElementException();\n\t\t\t\t\t\t}\n}\n\nfunction querySelectedRenderProperties(string) {\n\tvar selector = document.querySelectorAll(string);\n\tif (selector.length === 0) {\n\t\treturn undefined;\n\t} else {\n\t\tvar returnArray = [];\n\t\tfor (var i = 0; i < selector.length; i++) {\n\t\t\treturnArray.push(getRenderProperties(selector[i]));\n\t\t}\n\t\treturn returnArray;\n\t}\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n\tvar canvas = document.createElement('canvas');\n\treturn {\n\t\telement: canvas,\n\t\toptions: (0, _getOptionsFromElement2.default)(imgElement),\n\t\trenderer: _renderers2.default.CanvasRenderer,\n\t\tafterRender: function afterRender() {\n\t\t\timgElement.setAttribute(\"src\", canvas.toDataURL());\n\t\t}\n\t};\n}\n\nexports.default = getRenderProperties;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/getOptionsFromElement.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _optionsFromStrings = require(\"./optionsFromStrings.js\");\n\nvar _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings);\n\nvar _defaults = require(\"../options/defaults.js\");\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOptionsFromElement(element) {\n\tvar options = {};\n\tfor (var property in _defaults2.default) {\n\t\tif (_defaults2.default.hasOwnProperty(property)) {\n\t\t\t// jsbarcode-*\n\t\t\tif (element.hasAttribute(\"jsbarcode-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"jsbarcode-\" + property.toLowerCase());\n\t\t\t}\n\n\t\t\t// data-*\n\t\t\tif (element.hasAttribute(\"data-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"data-\" + property.toLowerCase());\n\t\t\t}\n\t\t}\n\t}\n\n\toptions[\"value\"] = element.getAttribute(\"jsbarcode-value\") || element.getAttribute(\"data-value\");\n\n\t// Since all atributes are string they need to be converted to integers\n\toptions = (0, _optionsFromStrings2.default)(options);\n\n\treturn options;\n}\n\nexports.default = getOptionsFromElement;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/help/optionsFromStrings.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = optionsFromStrings;\n\n// Convert string to integers/booleans where it should be\n\nfunction optionsFromStrings(options) {\n\tvar intOptions = [\"width\", \"height\", \"textMargin\", \"fontSize\", \"margin\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\n\n\tfor (var intOption in intOptions) {\n\t\tif (intOptions.hasOwnProperty(intOption)) {\n\t\t\tintOption = intOptions[intOption];\n\t\t\tif (typeof options[intOption] === \"string\") {\n\t\t\t\toptions[intOption] = parseInt(options[intOption], 10);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options[\"displayValue\"] === \"string\") {\n\t\toptions[\"displayValue\"] = options[\"displayValue\"] != \"false\";\n\t}\n\n\treturn options;\n}","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/options/defaults.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar defaults = {\n\twidth: 2,\n\theight: 100,\n\tformat: \"auto\",\n\tdisplayValue: true,\n\tfontOptions: \"\",\n\tfont: \"monospace\",\n\ttext: undefined,\n\ttextAlign: \"center\",\n\ttextPosition: \"bottom\",\n\ttextMargin: 2,\n\tfontSize: 20,\n\tbackground: \"#ffffff\",\n\tlineColor: \"#000000\",\n\tmargin: 10,\n\tmarginTop: undefined,\n\tmarginBottom: undefined,\n\tmarginLeft: undefined,\n\tmarginRight: undefined,\n\tvalid: function valid() {}\n};\n\nexports.default = defaults;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/renderers/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _canvas = require('./canvas.js');\n\nvar _canvas2 = _interopRequireDefault(_canvas);\n\nvar _svg = require('./svg.js');\n\nvar _svg2 = _interopRequireDefault(_svg);\n\nvar _object = require('./object.js');\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = { CanvasRenderer: _canvas2.default, SVGRenderer: _svg2.default, ObjectRenderer: _object2.default };","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/renderers/canvas.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _shared = require(\"./shared.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CanvasRenderer = function () {\n\tfunction CanvasRenderer(canvas, encodings, options) {\n\t\t_classCallCheck(this, CanvasRenderer);\n\n\t\tthis.canvas = canvas;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tCanvasRenderer.prototype.render = function render() {\n\t\t// Abort if the browser does not support HTML5 canvas\n\t\tif (!this.canvas.getContext) {\n\t\t\tthrow new Error('The browser does not support canvas.');\n\t\t}\n\n\t\tthis.prepareCanvas();\n\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\tvar encodingOptions = (0, _merge2.default)(this.options, this.encodings[i].options);\n\n\t\t\tthis.drawCanvasBarcode(encodingOptions, this.encodings[i]);\n\t\t\tthis.drawCanvasText(encodingOptions, this.encodings[i]);\n\n\t\t\tthis.moveCanvasDrawing(this.encodings[i]);\n\t\t}\n\n\t\tthis.restoreCanvas();\n\t};\n\n\tCanvasRenderer.prototype.prepareCanvas = function prepareCanvas() {\n\t\t// Get the canvas context\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\tctx.save();\n\n\t\t(0, _shared.calculateEncodingAttributes)(this.encodings, this.options, ctx);\n\t\tvar totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings);\n\t\tvar maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings);\n\n\t\tthis.canvas.width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\n\t\tthis.canvas.height = maxHeight;\n\n\t\t// Paint the canvas\n\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tif (this.options.background) {\n\t\t\tctx.fillStyle = this.options.background;\n\t\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t}\n\n\t\tctx.translate(this.options.marginLeft, 0);\n\t};\n\n\tCanvasRenderer.prototype.drawCanvasBarcode = function drawCanvasBarcode(options, encoding) {\n\t\t// Get the canvas context\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\tvar binary = encoding.data;\n\n\t\t// Creates the barcode out of the encoded binary\n\t\tvar yFrom;\n\t\tif (options.textPosition == \"top\") {\n\t\t\tyFrom = options.marginTop + options.fontSize + options.textMargin;\n\t\t} else {\n\t\t\tyFrom = options.marginTop;\n\t\t}\n\n\t\tctx.fillStyle = options.lineColor;\n\n\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\tvar x = b * options.width + encoding.barcodePadding;\n\n\t\t\tif (binary[b] === \"1\") {\n\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height);\n\t\t\t} else if (binary[b]) {\n\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height * binary[b]);\n\t\t\t}\n\t\t}\n\t};\n\n\tCanvasRenderer.prototype.drawCanvasText = function drawCanvasText(options, encoding) {\n\t\t// Get the canvas context\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\tvar font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t\t// Draw the text if displayValue is set\n\t\tif (options.displayValue) {\n\t\t\tvar x, y;\n\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\ty = options.marginTop + options.fontSize - options.textMargin;\n\t\t\t} else {\n\t\t\t\ty = options.height + options.textMargin + options.marginTop + options.fontSize;\n\t\t\t}\n\n\t\t\tctx.font = font;\n\n\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\tx = 0;\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\tx = encoding.width - 1;\n\t\t\t\tctx.textAlign = 'right';\n\t\t\t}\n\t\t\t// In all other cases, center the text\n\t\t\telse {\n\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t}\n\n\t\t\tctx.fillText(encoding.text, x, y);\n\t\t}\n\t};\n\n\tCanvasRenderer.prototype.moveCanvasDrawing = function moveCanvasDrawing(encoding) {\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\tctx.translate(encoding.width, 0);\n\t};\n\n\tCanvasRenderer.prototype.restoreCanvas = function restoreCanvas() {\n\t\t// Get the canvas context\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\tctx.restore();\n\t};\n\n\treturn CanvasRenderer;\n}();\n\nexports.default = CanvasRenderer;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/renderers/shared.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.getTotalWidthOfEncodings = exports.calculateEncodingAttributes = exports.getBarcodePadding = exports.getEncodingHeight = exports.getMaximumHeightOfEncodings = undefined;\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getEncodingHeight(encoding, options) {\n\treturn options.height + (options.displayValue && encoding.text.length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n}\n\nfunction getBarcodePadding(textWidth, barcodeWidth, options) {\n\tif (options.displayValue && barcodeWidth < textWidth) {\n\t\tif (options.textAlign == \"center\") {\n\t\t\treturn Math.floor((textWidth - barcodeWidth) / 2);\n\t\t} else if (options.textAlign == \"left\") {\n\t\t\treturn 0;\n\t\t} else if (options.textAlign == \"right\") {\n\t\t\treturn Math.floor(textWidth - barcodeWidth);\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction calculateEncodingAttributes(encodings, barcodeOptions, context) {\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tvar encoding = encodings[i];\n\t\tvar options = (0, _merge2.default)(barcodeOptions, encoding.options);\n\n\t\t// Calculate the width of the encoding\n\t\tvar textWidth;\n\t\tif (options.displayValue) {\n\t\t\ttextWidth = messureText(encoding.text, options, context);\n\t\t} else {\n\t\t\ttextWidth = 0;\n\t\t}\n\n\t\tvar barcodeWidth = encoding.data.length * options.width;\n\t\tencoding.width = Math.ceil(Math.max(textWidth, barcodeWidth));\n\n\t\tencoding.height = getEncodingHeight(encoding, options);\n\n\t\tencoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options);\n\t}\n}\n\nfunction getTotalWidthOfEncodings(encodings) {\n\tvar totalWidth = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\ttotalWidth += encodings[i].width;\n\t}\n\treturn totalWidth;\n}\n\nfunction getMaximumHeightOfEncodings(encodings) {\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tif (encodings[i].height > maxHeight) {\n\t\t\tmaxHeight = encodings[i].height;\n\t\t}\n\t}\n\treturn maxHeight;\n}\n\nfunction messureText(string, options, context) {\n\tvar ctx;\n\tif (typeof context === \"undefined\") {\n\t\tctx = document.createElement(\"canvas\").getContext(\"2d\");\n\t} else {\n\t\tctx = context;\n\t}\n\n\tctx.font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t// Calculate the width of the encoding\n\tvar size = ctx.measureText(string).width;\n\n\treturn size;\n}\n\nexports.getMaximumHeightOfEncodings = getMaximumHeightOfEncodings;\nexports.getEncodingHeight = getEncodingHeight;\nexports.getBarcodePadding = getBarcodePadding;\nexports.calculateEncodingAttributes = calculateEncodingAttributes;\nexports.getTotalWidthOfEncodings = getTotalWidthOfEncodings;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/renderers/svg.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _merge = require(\"../help/merge.js\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _shared = require(\"./shared.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar svgns = \"http://www.w3.org/2000/svg\";\n\nvar SVGRenderer = function () {\n\tfunction SVGRenderer(svg, encodings, options) {\n\t\t_classCallCheck(this, SVGRenderer);\n\n\t\tthis.svg = svg;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tSVGRenderer.prototype.render = function render() {\n\t\tvar currentX = this.options.marginLeft;\n\n\t\tthis.prepareSVG();\n\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\tvar encoding = this.encodings[i];\n\t\t\tvar encodingOptions = (0, _merge2.default)(this.options, encoding.options);\n\n\t\t\tvar group = createGroup(currentX, encodingOptions.marginTop, this.svg);\n\n\t\t\tsetGroupOptions(group, encodingOptions);\n\n\t\t\tthis.drawSvgBarcode(group, encodingOptions, encoding);\n\t\t\tthis.drawSVGText(group, encodingOptions, encoding);\n\n\t\t\tcurrentX += encoding.width;\n\t\t}\n\t};\n\n\tSVGRenderer.prototype.prepareSVG = function prepareSVG() {\n\t\t// Clear the SVG\n\t\twhile (this.svg.firstChild) {\n\t\t\tthis.svg.removeChild(this.svg.firstChild);\n\t\t}\n\n\t\t(0, _shared.calculateEncodingAttributes)(this.encodings, this.options);\n\t\tvar totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings);\n\t\tvar maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings);\n\n\t\tvar width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\t\tthis.setSvgAttributes(width, maxHeight);\n\n\t\tif (this.options.background) {\n\t\t\tdrawRect(0, 0, width, maxHeight, this.svg).setAttribute(\"style\", \"fill:\" + this.options.background + \";\");\n\t\t}\n\t};\n\n\tSVGRenderer.prototype.drawSvgBarcode = function drawSvgBarcode(parent, options, encoding) {\n\t\tvar binary = encoding.data;\n\n\t\t// Creates the barcode out of the encoded binary\n\t\tvar yFrom;\n\t\tif (options.textPosition == \"top\") {\n\t\t\tyFrom = options.fontSize + options.textMargin;\n\t\t} else {\n\t\t\tyFrom = 0;\n\t\t}\n\n\t\tvar barWidth = 0;\n\t\tvar x = 0;\n\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\tx = b * options.width + encoding.barcodePadding;\n\n\t\t\tif (binary[b] === \"1\") {\n\t\t\t\tbarWidth++;\n\t\t\t} else if (barWidth > 0) {\n\t\t\t\tdrawRect(x - options.width * barWidth, yFrom, options.width * barWidth, options.height, parent);\n\t\t\t\tbarWidth = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Last draw is needed since the barcode ends with 1\n\t\tif (barWidth > 0) {\n\t\t\tdrawRect(x - options.width * (barWidth - 1), yFrom, options.width * barWidth, options.height, parent);\n\t\t}\n\t};\n\n\tSVGRenderer.prototype.drawSVGText = function drawSVGText(parent, options, encoding) {\n\t\tvar textElem = document.createElementNS(svgns, 'text');\n\n\t\t// Draw the text if displayValue is set\n\t\tif (options.displayValue) {\n\t\t\tvar x, y;\n\n\t\t\ttextElem.setAttribute(\"style\", \"font:\" + options.fontOptions + \" \" + options.fontSize + \"px \" + options.font);\n\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\ty = options.fontSize - options.textMargin;\n\t\t\t} else {\n\t\t\t\ty = options.height + options.textMargin + options.fontSize;\n\t\t\t}\n\n\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\tx = 0;\n\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"start\");\n\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\tx = encoding.width - 1;\n\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"end\");\n\t\t\t}\n\t\t\t// In all other cases, center the text\n\t\t\telse {\n\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\t}\n\n\t\t\ttextElem.setAttribute(\"x\", x);\n\t\t\ttextElem.setAttribute(\"y\", y);\n\n\t\t\ttextElem.appendChild(document.createTextNode(encoding.text));\n\n\t\t\tparent.appendChild(textElem);\n\t\t}\n\t};\n\n\tSVGRenderer.prototype.setSvgAttributes = function setSvgAttributes(width, height) {\n\t\tvar svg = this.svg;\n\t\tsvg.setAttribute(\"width\", width + \"px\");\n\t\tsvg.setAttribute(\"height\", height + \"px\");\n\t\tsvg.setAttribute(\"x\", \"0px\");\n\t\tsvg.setAttribute(\"y\", \"0px\");\n\t\tsvg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n\t\tsvg.setAttribute(\"xmlns\", svgns);\n\t\tsvg.setAttribute(\"version\", \"1.1\");\n\n\t\tsvg.style.transform = \"translate(0,0)\";\n\t};\n\n\treturn SVGRenderer;\n}();\n\nfunction createGroup(x, y, parent) {\n\tvar group = document.createElementNS(svgns, 'g');\n\n\tgroup.setAttribute(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\tparent.appendChild(group);\n\n\treturn group;\n}\n\nfunction setGroupOptions(group, options) {\n\tgroup.setAttribute(\"style\", \"fill:\" + options.lineColor + \";\");\n}\n\nfunction drawRect(x, y, width, height, parent) {\n\tvar rect = document.createElementNS(svgns, 'rect');\n\n\trect.setAttribute(\"x\", x);\n\trect.setAttribute(\"y\", y);\n\trect.setAttribute(\"width\", width);\n\trect.setAttribute(\"height\", height);\n\n\tparent.appendChild(rect);\n\n\treturn rect;\n}\n\nexports.default = SVGRenderer;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/renderers/object.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ObjectRenderer = function () {\n\tfunction ObjectRenderer(object, encodings, options) {\n\t\t_classCallCheck(this, ObjectRenderer);\n\n\t\tthis.object = object;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tObjectRenderer.prototype.render = function render() {\n\t\tthis.object.encodings = this.encodings;\n\t};\n\n\treturn ObjectRenderer;\n}();\n\nexports.default = ObjectRenderer;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/exceptions/exceptions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InvalidInputException = function (_Error) {\n\t_inherits(InvalidInputException, _Error);\n\n\tfunction InvalidInputException(symbology, input) {\n\t\t_classCallCheck(this, InvalidInputException);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Error.call(this));\n\n\t\t_this.name = \"InvalidInputException\";\n\n\t\t_this.symbology = symbology;\n\t\t_this.input = input;\n\n\t\t_this.message = '\"' + _this.input + '\" is not a valid input for ' + _this.symbology;\n\t\treturn _this;\n\t}\n\n\treturn InvalidInputException;\n}(Error);\n\nvar InvalidElementException = function (_Error2) {\n\t_inherits(InvalidElementException, _Error2);\n\n\tfunction InvalidElementException() {\n\t\t_classCallCheck(this, InvalidElementException);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, _Error2.call(this));\n\n\t\t_this2.name = \"InvalidElementException\";\n\t\t_this2.message = \"Not supported type to render on\";\n\t\treturn _this2;\n\t}\n\n\treturn InvalidElementException;\n}(Error);\n\nvar NoElementException = function (_Error3) {\n\t_inherits(NoElementException, _Error3);\n\n\tfunction NoElementException() {\n\t\t_classCallCheck(this, NoElementException);\n\n\t\tvar _this3 = _possibleConstructorReturn(this, _Error3.call(this));\n\n\t\t_this3.name = \"NoElementException\";\n\t\t_this3.message = \"No element to render on.\";\n\t\treturn _this3;\n\t}\n\n\treturn NoElementException;\n}(Error);\n\nexports.InvalidInputException = InvalidInputException;\nexports.InvalidElementException = InvalidElementException;\nexports.NoElementException = NoElementException;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/bin/exceptions/ErrorHandler.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*eslint no-console: 0 */\n\nvar ErrorHandler = function () {\n\tfunction ErrorHandler(api) {\n\t\t_classCallCheck(this, ErrorHandler);\n\n\t\tthis.api = api;\n\t}\n\n\tErrorHandler.prototype.handleCatch = function handleCatch(e) {\n\t\t// If babel supported extending of Error in a correct way instanceof would be used here\n\t\tif (e.name === \"InvalidInputException\") {\n\t\t\tif (this.api._options.valid !== this.api._defaults.valid) {\n\t\t\t\tthis.api._options.valid(false);\n\t\t\t} else {\n\t\t\t\tthrow e.message;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\n\t\tthis.api.render = function () {};\n\t};\n\n\tErrorHandler.prototype.wrapBarcodeCall = function wrapBarcodeCall(func) {\n\t\ttry {\n\t\t\tvar result = func.apply(undefined, arguments);\n\t\t\tthis.api._options.valid(true);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tthis.handleCatch(e);\n\n\t\t\treturn this.api;\n\t\t}\n\t};\n\n\treturn ErrorHandler;\n}();\n\nexports.default = ErrorHandler;","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/gulpfile.js":"/*eslint\nno-console: 0\n*/\n\nvar gulp = require('gulp');\n\nrequire('./automation/building.js');\nrequire('./automation/linting.js');\nrequire('./automation/releasing.js');\nrequire('./automation/misc.js');\n\n\ngulp.task('watch', ['compile'], function() {\n\tgulp.watch(\"src/**/*\", ['compile']);\n});\n\ngulp.task('watch-web', ['webpack'], function() {\n\tgulp.watch(\"src/**/*\", ['webpack']);\n});\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/automation/building.js":"var gulp = require('gulp');\nvar header = require('gulp-header');\nvar clean = require('gulp-clean');\nvar gulpWebpack = require('webpack-stream');\nvar webpack = require('webpack');\nvar babel = require(\"gulp-babel\");\nvar runSequence = require('run-sequence');\nvar fs = require('fs');\n\nvar settings = require('./settings.json');\nvar shared = require('./shared.js');\n\ngulp.task(\"clean\", function(){\n\treturn gulp.src([\"bin/\", \"dist/\"], {read: false})\n\t\t.pipe(clean());\n});\n\n\ngulp.task(\"babel\", function () {\n\treturn babelFunc();\n});\n\n\nfunction babelFunc(){\n\treturn gulp.src(\"src/**/*\")\n\t\t.pipe(babel({\n\t\t\tpresets: ['es2015'],\n\t\t\tplugins: [[\"transform-es2015-classes\", {loose: true}]]\n\t\t}))\n\t\t.pipe(gulp.dest(\"bin/\"));\n}\n\n\ngulp.task(\"webpack\", [\"babel\"], function () {\n\treturn webpackFunc();\n});\n\n\nfunction webpackFunc(){\n\treturn gulp.src('bin/JsBarcode.js')\n\t\t.pipe(gulpWebpack(\n\t\t\t{\n\t\t\t\toutput: {\n\t\t\t\t\tfilename: 'JsBarcode.all.js'\n\t\t\t\t}\n\t\t\t}\n\t\t, webpack))\n\t\t.pipe(gulp.dest(\"dist/\"));\n}\n\n\ngulp.task(\"webpack-min\", [\"babel\"], function () {\n\treturn webpackMin('all');\n});\n\n\nfunction webpackMin(name, dest){\n\tdest = dest || './';\n\treturn gulp.src('bin/JsBarcode.js')\n\t\t.pipe(gulpWebpack(\n\t\t\t{\n\t\t\t\toutput: {\n\t\t\t\t\tfilename: shared.minifiedFilename(name)\n\t\t\t\t},\n\t\t\t\tplugins: [new webpack.optimize.UglifyJsPlugin()]\n\t\t\t}\n\t\t, webpack))\n\t\t.pipe(header(settings.banner, require(settings.baseDir + 'package.json') ))\n\t\t.pipe(gulp.dest(\"dist/\" + dest));\n}\n\n\ngulp.task(\"webpack-all\", function (cb) {\n\tvar barcodes = require('./barcode-building.json');\n\n\t// Move the real barcodes/index.js out of the way while compiling the individual barcodes\n\tfs.renameSync(\"src/barcodes/index.js\", \"src/barcodes/index.tmp.js\");\n\n\t// Take a barcode from the barcodes array, call the functions to compile that\n\t// format and have a callback when it has finished.\n\tfunction loopBarcode(i){\n\t\tif(i < barcodes.length){\n\t\t\tcreateBarcodeInclude(barcodes[i], function(){\n\t\t\t\tloopBarcode(i + 1);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tfs.renameSync(\"src/barcodes/index.tmp.js\", \"src/barcodes/index.js\");\n\t\t\tcb(); // Done\n\t\t}\n\t}\n\n\tloopBarcode(0);\n});\n\n\n// Takes information about a barcode formatSize\n// Modifies the barcodes/index.js file to only import the specified format\n// and then does a recompilation and minifies everything with webpack\nfunction createBarcodeInclude(barcode, callback){\n\tvar toFile = \"\";\n\ttoFile += \"import {\" + barcode.names + \"} from '\" + barcode.barcodeFile + \"'\";\n\ttoFile += \"\\n\";\n\ttoFile += \"export default {\" + barcode.names + \"}\";\n\n\t// Write a new barcodes/index file that only includes the specified barcode\n\tfs.writeFile(\"src/barcodes/index.js\", toFile, function(){\n\t\t// Remove the compiled barcodes/index file (if it exist)\n\t\tif(fs.existsSync(\"bin/barcodes/index.js\")){\n\t\t\tfs.unlinkSync(\"bin/barcodes/index.js\");\n\t\t}\n\t\t// Re-compile with babel and webpack everything\n\t\tbabelFunc().on('end', function(){\n\t\t\twebpackMin(barcode.name, 'barcodes/').on('end', callback);\n\t\t});\n\t});\n}\n\n\ngulp.task('compress', function(cb) {\n\trunSequence(\n\t\t\"clean\",\n\t\t\"webpack-all\",\n\t\t\"webpack\",\n\t\t\"webpack-min\",\n\t\tcb\n\t);\n});\n\ngulp.task('compile', ['babel']);\n\ngulp.task('compile-web', ['webpack']);\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/automation/linting.js":"var gulp = require('gulp');\nvar eslint = require('gulp-eslint');\n\ngulp.task(\"lint\", function () {\n\treturn gulp.src(['src/**/*.js'])\n\t\t.pipe(eslint())\n\t\t.pipe(eslint.format())\n\t\t.pipe(eslint.failAfterError());\n});\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/automation/misc.js":"/*eslint no-console: 0 */\n\nvar gulp = require('gulp');\nvar request = require('request');\nvar fs = require('fs');\n\ngulp.task('jsdelivr', function(callback){\n\tconsole.log(\"Making request...\");\n\trequest({\n\t\turl: \"https://api.jsdelivr.com/v1/jsdelivr/libraries?name=jsbarcode\",\n\t\tjson: true\n\t}, function (error, response, body) {\n\t\tif (!error && response.statusCode === 200) {\n\t\t\tvar readme = fs.readFileSync('README.md', \"utf-8\");\n\t\t\tvar version = body[0].lastversion;\n\n\t\t\treadme = readme.replace(/https:\\/\\/cdn\\.jsdelivr\\.net\\/jsbarcode\\/[0-9]+\\.[0-9]+\\.[0-9]+\\//g,\n\t\t\t\t\"https://cdn.jsdelivr.net/jsbarcode/\" + version + \"/\");\n\n\t\t\tfs.writeFileSync('README.md', readme, 'utf8');\n\n\t\t\tconsole.log(\"New version: \" + version);\n\t\t\tcallback();\n\t\t}\n\t\telse{\n\t\t\tconsole.error(\"Failed to make jsdelivr api request\");\n\t\t\tcallback();\n\t\t}\n\t});\n});\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/automation/releasing.js":"/*eslint\nno-console: 0\n*/\n\nvar gulp = require('gulp');\nvar bump = require('gulp-bump');\nvar git = require('gulp-git');\nvar publishRelease = require('publish-release');\nvar gzipSize = require('gzip-size');\nvar runSequence = require('run-sequence');\nvar fs = require('fs');\n\nvar settings = require('./settings.json');\nvar shared = require('./shared.js');\n\n\ngulp.task('git-release', ['compress'], function(cb){\n\tvar pkg = require(settings.baseDir + 'package.json');\n\tvar v = 'v' + pkg.version;\n\tvar message = ':package: Release ' + v;\n\n\tupdateReadmeFileSizes();\n\n\tgulp.src(['./package.json', './bower.json', './README.md', './bin/', './dist'])\n\t\t.pipe(git.add({args: '--all --force'}))\n\t\t.pipe(git.commit(message));\n\n\tgit.push('origin', 'master', function(){\n\t\tgit.tag(v, message, function(){\n\t\t\tgit.push('origin', 'master', {args: '--tags'}, cb);\n\t\t});\n\t});\n});\n\n\n// Bump (increase) the version number\ngulp.task('bump-patch', function(){\n\treturn gulp.src(['./package.json', './bower.json'])\n\t\t.pipe(bump({type:'patch'}))\n\t\t.pipe(gulp.dest('./'));\n});\n\n\ngulp.task('bump-minor', function(){\n\treturn gulp.src(['./package.json', './bower.json'])\n\t\t.pipe(bump({type:'minor'}))\n\t\t.pipe(gulp.dest('./'));\n});\n\n\ngulp.task('bump-major', function(){\n\treturn gulp.src(['./package.json', './bower.json'])\n\t\t.pipe(bump({type:'major'}))\n\t\t.pipe(gulp.dest('./'));\n});\n\n\ngulp.task('npm', function (done) {\n\trequire('child_process').spawn('npm', ['publish'], { stdio: 'inherit' })\n\t\t.on('close', done);\n});\n\n\ngulp.task('github-release', function(done) {\n\tvar pkg = require(settings.baseDir + './package.json');\n\tvar v = 'v' + pkg.version;\n\tvar name = \"JsBarcode \" + v;\n\n\tpublishRelease({\n\t\ttoken: process.env.GITHUB_TOKEN,\n\t\towner: \"lindell\",\n\t\trepo: \"JsBarcode\",\n\t\ttag: v,\n\t\tname: name,\n\t\tassets: [__dirname + \"/\" + settings.baseDir + \"/dist/JsBarcode.all.min.js\", __dirname + \"/\" + settings.baseDir + \"/dist/JsBarcode.all.js\"]\n\t}, done);\n});\n\n\n\ngulp.task('release', ['lint'], function(callback){\n\trunSequence(\n\t\t'git-release',\n\t\t'github-release',\n\t\t'npm',\n\t\tcallback\n\t);\n});\n\n\ngulp.task('patch', function(){\n\trunSequence(\n\t\t'bump-patch',\n\t\t'release',\n\t\treleaseDone\n\t);\n});\n\n\ngulp.task('minor', function(){\n\trunSequence(\n\t\t'bump-minor',\n\t\t'release',\n\t\treleaseDone\n\t);\n});\n\n\ngulp.task('major', function(){\n\trunSequence(\n\t\t'bump-major',\n\t\t'release',\n\t\treleaseDone\n\t);\n});\n\nfunction releaseDone (error) {\n\tif (error) {\n\t\tconsole.log(error.message);\n\t}\n\telse {\n\t\tconsole.log('Successful!');\n\t}\n}\n\n\nfunction updateReadmeFileSizes(){\n\tvar files = require('./barcode-building.json');\n\tvar readme = fs.readFileSync('README.md', \"utf-8\");\n\n\t// Update .all files\n\tvar allData = fs.readFileSync('dist/JsBarcode.all.min.js');\n\tvar allFilesize = gzipSize.sync(allData);\n\n\tvar allRegexp = new RegExp('\\\\|[^\\\\|]*\\\\|([ \\\\t\\\\*]*\\\\[JsBarcode\\\\.all\\\\.min\\\\.js\\\\])');\n\treadme = readme.replace(allRegexp, \"|  *\" + formatSize(allFilesize) + \"*  |$1\");\n\n\t// Update all barcodes files\n\tfor(var i in files){\n\t\tvar filename = shared.minifiedFilename(files[i].name);\n\n\t\tvar fileData = fs.readFileSync('dist/barcodes/' + filename);\n\t\tvar fileFilesize = gzipSize.sync(fileData);\n\n\t\tvar fileRegexp = new RegExp('\\\\|[^\\\\|]*\\\\|([ \\\\t]*\\\\[' + RegExp.escape(filename) + '\\\\])');\n\n\t\treadme = readme.replace(fileRegexp, \"|  \" + formatSize(fileFilesize) + \"  |$1\");\n\t}\n\n\tfs.writeFileSync('README.md', readme, 'utf8');\n}\n\n\n// Util functions\nRegExp.escape = function(s) {\n\treturn s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nfunction formatSize(bytes){\n\tvar kilobytes = Math.round(bytes / 1024 * 10) / 10;\n\n\treturn kilobytes + \" kB\";\n}\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/automation/shared.js":"module.exports = {};\n\nmodule.exports.minifiedFilename = function(name){\n\treturn \"JsBarcode.\" + name + \".min.js\";\n};\n","/home/travis/build/npmtest/node-npmtest-jsbarcode/node_modules/jsbarcode/src/JsBarcode.js":"// Import all the barcodes\r\nimport barcodes from './barcodes/';\r\n\r\n// Help functions\r\nimport merge from './help/merge.js';\r\nimport linearizeEncodings from './help/linearizeEncodings.js';\r\nimport fixOptions from './help/fixOptions.js';\r\nimport getRenderProperties from './help/getRenderProperties.js';\r\nimport optionsFromStrings from './help/optionsFromStrings.js';\r\n\r\n// Exceptions\r\nimport ErrorHandler from './exceptions/ErrorHandler.js';\r\nimport {InvalidInputException, NoElementException} from './exceptions/exceptions.js';\r\n\r\n// Default values\r\nimport defaults from './options/defaults.js';\r\n\r\n// The protype of the object returned from the JsBarcode() call\r\nlet API = function(){};\r\n\r\n// The first call of the library API\r\n// Will return an object with all barcodes calls and the data that is used\r\n// by the renderers\r\nlet JsBarcode = function(element, text, options){\r\n\tvar api = new API();\r\n\r\n\tif(typeof element === \"undefined\"){\r\n\t\tthrow Error(\"No element to render on was provided.\");\r\n\t}\r\n\r\n\t// Variables that will be pased through the API calls\r\n\tapi._renderProperties = getRenderProperties(element);\r\n\tapi._encodings = [];\r\n\tapi._options = defaults;\r\n\tapi._errorHandler = new ErrorHandler(api);\r\n\r\n\t// If text is set, use the simple syntax (render the barcode directly)\r\n\tif(typeof text !== \"undefined\"){\r\n\t\toptions = options || {};\r\n\r\n\t\tif(!options.format){\r\n\t\t\toptions.format = autoSelectBarcode();\r\n\t\t}\r\n\r\n\t\tapi.options(options)[options.format](text, options).render();\r\n\t}\r\n\r\n\treturn api;\r\n};\r\n\r\n// To make tests work TODO: remove\r\nJsBarcode.getModule = function(name){\r\n\treturn barcodes[name];\r\n};\r\n\r\n// Register all barcodes\r\nfor(var name in barcodes){\r\n\tif(barcodes.hasOwnProperty(name)){ // Security check if the propery is a prototype property\r\n\t\tregisterBarcode(barcodes, name);\r\n\t}\r\n}\r\nfunction registerBarcode(barcodes, name){\r\n\tAPI.prototype[name] =\r\n\tAPI.prototype[name.toUpperCase()] =\r\n\tAPI.prototype[name.toLowerCase()] =\r\n\t\tfunction(text, options){\r\n\t\t\tvar api = this;\r\n\t\t\treturn api._errorHandler.wrapBarcodeCall(function(){\r\n\t\t\t\t// Ensure text is options.text\r\n\t\t\t\toptions.text = typeof options.text === 'undefined' ? undefined : '' + options.text;\r\n\r\n\t\t\t\tvar newOptions = merge(api._options, options);\r\n\t\t\t\tnewOptions = optionsFromStrings(newOptions);\r\n\t\t\t\tvar Encoder = barcodes[name];\r\n\t\t\t\tvar encoded = encode(text, Encoder, newOptions);\r\n\t\t\t\tapi._encodings.push(encoded);\r\n\r\n\t\t\t\treturn api;\r\n\t\t\t});\r\n\t\t};\r\n}\r\n\r\n// encode() handles the Encoder call and builds the binary string to be rendered\r\nfunction encode(text, Encoder, options){\r\n\t// Ensure that text is a string\r\n\ttext = \"\" + text;\r\n\r\n\tvar encoder = new Encoder(text, options);\r\n\r\n\t// If the input is not valid for the encoder, throw error.\r\n\t// If the valid callback option is set, call it instead of throwing error\r\n\tif(!encoder.valid()){\r\n\t\tthrow new InvalidInputException(encoder.constructor.name, text);\r\n\t}\r\n\r\n\t// Make a request for the binary data (and other infromation) that should be rendered\r\n\tvar encoded = encoder.encode();\r\n\r\n\t// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\r\n\t// Convert to [1-1, 1-2, 2, 3-1, 3-2]\r\n\tencoded = linearizeEncodings(encoded);\r\n\r\n\t// Merge\r\n\tfor(let i = 0; i < encoded.length; i++){\r\n\t\tencoded[i].options = merge(options, encoded[i].options);\r\n\t}\r\n\r\n\treturn encoded;\r\n}\r\n\r\nfunction autoSelectBarcode(){\r\n\t// If CODE128 exists. Use it\r\n\tif(barcodes[\"CODE128\"]){\r\n\t\treturn \"CODE128\";\r\n\t}\r\n\r\n\t// Else, take the first (probably only) barcode\r\n\treturn Object.keys(barcodes)[0];\r\n}\r\n\r\n// Sets global encoder options\r\n// Added to the api by the JsBarcode function\r\nAPI.prototype.options = function(options){\r\n\tthis._options = merge(this._options, options);\r\n\treturn this;\r\n};\r\n\r\n// Will create a blank space (usually in between barcodes)\r\nAPI.prototype.blank = function(size){\r\n\tvar zeroes = \"0\".repeat(size);\r\n\tthis._encodings.push({data: zeroes});\r\n\treturn this;\r\n};\r\n\r\n// Initialize JsBarcode on all HTML elements defined.\r\nAPI.prototype.init = function(){\r\n\t// Should do nothing if no elements where found\r\n\tif(!this._renderProperties){\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Make sure renderProperies is an array\r\n\tif(!Array.isArray(this._renderProperties)){\r\n\t\tthis._renderProperties = [this._renderProperties];\r\n\t}\r\n\r\n\tvar renderProperty;\r\n\tfor(let i in this._renderProperties){\r\n\t\trenderProperty = this._renderProperties[i];\r\n\t\tvar options = merge(this._options, renderProperty.options);\r\n\r\n\t\tif(options.format == \"auto\"){\r\n\t\t\toptions.format = autoSelectBarcode();\r\n\t\t}\r\n\r\n\t\tthis._errorHandler.wrapBarcodeCall(function(){\r\n\t\t\tvar text = options.value;\r\n\t\t\tvar Encoder = barcodes[options.format.toUpperCase()];\r\n\t\t\tvar encoded = encode(text, Encoder, options);\r\n\r\n\t\t\trender(renderProperty, encoded, options);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n// The render API call. Calls the real render function.\r\nAPI.prototype.render = function(){\r\n\tif(!this._renderProperties){\r\n\t\tthrow new NoElementException();\r\n\t}\r\n\r\n\tif(Array.isArray(this._renderProperties)){\r\n\t\tfor(var i = 0; i < this._renderProperties.length; i++){\r\n\t\t\trender(this._renderProperties[i], this._encodings, this._options);\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\trender(this._renderProperties, this._encodings, this._options);\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\nAPI.prototype._defaults = defaults;\r\n\r\n// Prepares the encodings and calls the renderer\r\nfunction render(renderProperties, encodings, options){\r\n\tencodings = linearizeEncodings(encodings);\r\n\r\n\tfor(let i = 0; i < encodings.length; i++){\r\n\t\tencodings[i].options = merge(options, encodings[i].options);\r\n\t\tfixOptions(encodings[i].options);\r\n\t}\r\n\r\n\tfixOptions(options);\r\n\r\n\tvar Renderer = renderProperties.renderer;\r\n\tvar renderer = new Renderer(renderProperties.element, encodings, options);\r\n\trenderer.render();\r\n\r\n\tif(renderProperties.afterRender){\r\n\t\trenderProperties.afterRender();\r\n\t}\r\n}\r\n\r\n// Export to browser\r\nif(typeof window !== \"undefined\"){\r\n\twindow.JsBarcode = JsBarcode;\r\n}\r\n\r\n// Export to jQuery\r\n/*global jQuery */\r\nif (typeof jQuery !== 'undefined') {\r\n\tjQuery.fn.JsBarcode = function(content, options){\r\n\t\tvar elementArray = [];\r\n\t\tjQuery(this).each(function() {\r\n\t\t\telementArray.push(this);\r\n\t\t});\r\n\t\treturn JsBarcode(elementArray, content, options);\r\n\t};\r\n}\r\n\r\n// Export to commonJS\r\nmodule.exports = JsBarcode;\r\n"}